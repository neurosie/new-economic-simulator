@import "helpers";

$field-width: 500px;
$board-spacing: 5px;
$board-row-cells: 17;
$tile-size: ($field-width - $board-spacing * ($board-row-cells + 1)) / $board-row-cells;
$tile-border-radius: 2px;

$mobile-threshold: $field-width + 20px;

$text-color: white; //#3B3B3B;
$cell-positive-color: $bootstrap-success;// #00FFA8;
$cell-negative-color: $bootstrap-danger;// #FF3100;
$cell-zero-color: rgba(black, 0.1);

$board-container-margin-top: 50px;
$board-container-margin-side: 40px;
$board-container-background: white; //#999;

$transition-speed: 500ms;

$indicator-size: 30px;
$indicator-bounce: 5px;

html, body {
	margin: 0;
	padding: 0;
}

// .left-menu {
// 	float:left;
// 	width: 200px;
// }

.board-wrapper {
	background: $board-container-background;
	margin-top: $board-container-margin-top;
	margin-left: $board-container-margin-side;
	margin-right: $board-container-margin-side;
	// float:left;
	position: relative;
	padding: $board-spacing;
	border-radius: $tile-border-radius * 2;
	width: $field-width;
	height: $field-width;
	box-sizing: border-box;

	.board-row {
    	margin-bottom: $board-spacing;
    
    	&:last-child {
    		margin-bottom: 0;
    	}
    
    	&:after {
    		content: "";
    		display: block;
    		clear: both;
    	}
	}

	.board-cell {
    	width: $tile-size;
    	height: $tile-size;
    	margin-right: $board-spacing;
    	float: left;
    	text-align: center;
    	vertical-align: middle;
    	line-height: $tile-size;
    	
    	color: $text-color;
    
    	border-radius: $tile-border-radius;
    	font-size: 15px;
    	font-family: Helvetica;
    	font-weight: bold;
    	
    
    	&:last-child {
    		margin-right: 0;
    	}
    	
    	@for $i from 1 through 12 {
    		&.positive.value-#{$i} {
    			// background: rgba($cell-positive-color, $i / 12);
    			// background: mix($cell-positive-color, $cell-negative-color, $i/12 * 50% + 50);
    			background: $cell-positive-color;
    		}
    		&.negative.value-#{$i} {
    			// background: rgba($cell-negative-color, $i / 12);
    			// background: mix($cell-negative-color, $cell-positive-color, $i/12 * 50% + 50);
    			background: $cell-negative-color;
    		}
    	}
    	
    	&.zero {
    		background: $cell-zero-color;
    		color: black;
    	}
    	
    	
    	// &.positive {
    	//	 font-weight: bold;
    	// }
    	// &.negative {
    	//	 font-style: italic;
    	// }
	}
}

.board-container {
	position: absolute;
	z-index: 1;
}

.country-container {
	position: absolute;
	z-index: 2;
}

.country {
	position: absolute;
	border-radius: $tile-border-radius;
	width: ceil($tile-size);
	height: ceil($tile-size);
	line-height: ceil($tile-size);
	
	// Build position classes
	@for $x from 1 through $board-row-cells {
		@for $y from 1 through $board-row-cells {
			&.country-position-#{$x}-#{$y} {
				$xPos: floor(($tile-size + $board-spacing) * ($x - 1));
				$yPos: floor(($tile-size + $board-spacing) * ($y - 1));
				@include transform(translate($xPos, $yPos));
			}
		}
	}
	
	@include transition($transition-speed ease-in-out);
	@include transition-property(transform);
}

@each $country in AF, AX, AL, DZ, AS, AD, AO, AI, AQ, AG, AR, AM, AW, AU, AT, AZ, BS, BH, BD, BB, BY, BE, BZ, BJ, BM, BT, BO, BQ, BA, BW, BV, BR, IO, BN, BG, BF, BI, KH, CM, CA, CV, KY, CF, TD, CL, CN, CX, CC, CO, KM, CG, CD, CK, CR, CI, HR, CU, CW, CY, CZ, DK, DJ, DM, DO, EC, EG, SV, GQ, ER, EE, ET, FK, FO, FJ, FI, FR, GF, PF, TF, GA, GM, GE, DE, GH, GI, GR, GL, GD, GP, GU, GT, GG, GN, GW, GY, HT, HM, VA, HN, HK, HU, IS, IN, ID, IR, IQ, IE, IM, IL, IT, JM, JP, JE, JO, KZ, KE, KI, KP, KR, KW, KG, LA, LV, LB, LS, LR, LY, LI, LT, LU, MO, MK, MG, MW, MY, MV, ML, MT, MH, MQ, MR, MU, YT, MX, FM, MD, MC, MN, ME, MS, MA, MZ, MM, NA, NR, NP, NL, NC, NZ, NI, NE, NG, NU, NF, MP, NO, OM, PK, PW, PS, PA, PG, PY, PE, PH, PN, PL, PT, PR, QA, RE, RO, RU, RW, BL, SH, KN, LC, MF, PM, VC, WS, SM, ST, SA, SN, RS, SC, SL, SG, SX, SK, SI, SB, SO, ZA, GS, SS, ES, LK, SD, SR, SJ, SZ, SE, CH, SY, TW, TJ, TZ, TH, TL, TG, TK, TO, TT, TN, TR, TM, TC, TV, UG, UA, AE, GB, US, UM, UY, UZ, VU, VE, VN, VG, VI, WF, EH, YE, ZM, ZWaf, ax, al, dz, as, ad, ao, ai, aq, ag, ar, am, aw, au, at, az, bs, bh, bd, bb, by, be, bz, bj, bm, bt, bo, bq, ba, bw, bv, br, io, bn, bg, bf, bi, kh, cm, ca, cv, ky, cf, td, cl, cn, cx, cc, co, km, cg, cd, ck, cr, ci, hr, cu, cw, cy, cz, dk, dj, dm, do, ec, eg, sv, gq, er, ee, et, fk, fo, fj, fi, fr, gf, pf, tf, ga, gm, ge, de, gh, gi, gr, gl, gd, gp, gu, gt, gg, gn, gw, gy, ht, hm, va, hn, hk, hu, is, in, id, ir, iq, ie, im, il, it, jm, jp, je, jo, kz, ke, ki, kp, kr, kw, kg, la, lv, lb, ls, lr, ly, li, lt, lu, mo, mk, mg, mw, my, mv, ml, mt, mh, mq, mr, mu, yt, mx, fm, md, mc, mn, me, ms, ma, mz, mm, na, nr, np, nl, nc, nz, ni, ne, ng, nu, nf, mp, no, om, pk, pw, ps, pa, pg, py, pe, ph, pn, pl, pt, pr, qa, re, ro, ru, rw, bl, sh, kn, lc, mf, pm, vc, ws, sm, st, sa, sn, rs, sc, sl, sg, sx, sk, si, sb, so, za, gs, ss, es, lk, sd, sr, sj, sz, se, ch, sy, tw, tj, tz, th, tl, tg, tk, to, tt, tn, tr, tm, tc, tv, ug, ua, ae, gb, us, um, uy, uz, vu, ve, vn, vg, vi, wf, eh, ye, zm, zw {
	.country.#{$country} {
		background-image: url('../assets/flags/#{$country}.svg');
		background-size: cover;
		background-repeat: no-repeat;
		background-position: center;
	}
}

@keyframes bounce-up { 
	from {transform: translateY(0px);}
	to {transform: translateY(-$indicator-bounce);}
}
@keyframes bounce-upper-right {
	from {transform: translate(0px, 0px);}
	to {transform: translate($indicator-bounce, -$indicator-bounce);}
}
@keyframes bounce-right {
	from {transform: translateX(0px);}
	to {transform: translateX($indicator-bounce);}
}
@keyframes bounce-lower-right {
	from {transform: translate(0px, 0px);}
	to {transform: translate($indicator-bounce, $indicator-bounce);}
}
@keyframes bounce-down { 
	from {transform: translateY(0px);}
	to {transform: translateY($indicator-bounce);}
}
@keyframes bounce-lower-left {
	from {transform: translate(0px, 0px);}
	to {transform: translate(-$indicator-bounce, $indicator-bounce);}
}
@keyframes bounce-left {
	from {transform: translateX(0px);}
	to {transform: translateX(-$indicator-bounce);}
}
@keyframes bounce-upper-left {
	from {transform: translate(0px, 0px);}
	to {transform: translate(-$indicator-bounce, -$indicator-bounce);}
}

.indicator {
	display:inline;
	visibility: hidden;
	position:absolute;
	height: $indicator-size;
	width: $indicator-size;
	font-size: $indicator-size;
	color: $bootstrap-primary;
	// background-size: cover;
	// background-repeat: no-repeat;
	// background-position: center;
	
	&.arrow-upper-left, &.arrow-up, &.arrow-upper-right {top: -$indicator-size + $board-spacing;}
	&.arrow-left, &.arrow-right {top: $field-width / 2 - $indicator-size / 2;}
	&.arrow-lower-left, &.arrow-down, &.arrow-lower-right {top: $field-width - $board-spacing;}
	
	&.arrow-upper-left, &.arrow-left, &.arrow-lower-left {left: -$indicator-size + $board-spacing;}
	&.arrow-up, &.arrow-down {left: $field-width / 2 - $indicator-size / 2;}
	&.arrow-upper-right, &.arrow-right, &.arrow-lower-right {left: $field-width - $board-spacing;}
}

$directions: (lower-right, down, lower-left, left, upper-left, up, upper-right, right);

@each $direction in $directions {
	.arrow-#{$direction} {
		// background-image: url('../assets/arrows/#{$direction}_arrow.svg');
		&.indicator {
			animation: bounce-#{$direction} 0.5s ease-in infinite alternate;
		}
		span {
			@include transform(rotate(45deg * index($directions, $direction)));
		}
	}
}

.current-event-alert .arrow {
	margin-right: 5px;
}